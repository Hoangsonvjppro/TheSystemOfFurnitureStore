-- Script Database cho hệ thống quản lý bán hàng nội thất
-- Bổ sung các đề xuất nâng cấp

-- ========== CÁC BẢNG CƠ BẢN ==========

-- 1. NGƯỜI DÙNG
CREATE TABLE User (
    id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(100) UNIQUE NOT NULL,
    password VARCHAR(255) NOT NULL,
    email VARCHAR(100) UNIQUE NOT NULL,
    full_name VARCHAR(255) NOT NULL,
    phone VARCHAR(20),
    address TEXT,
    role ENUM('ADMIN', 'CUSTOMER', 'INVENTORY_STAFF', 'SALES_STAFF', 'MANAGER') NOT NULL DEFAULT 'CUSTOMER',
    created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    is_active BOOLEAN DEFAULT TRUE
);

-- 2. DANH MỤC
CREATE TABLE Category (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    parent_id INT,
    description TEXT,
    image VARCHAR(255),
    is_active BOOLEAN DEFAULT TRUE,
    FOREIGN KEY (parent_id) REFERENCES Category(id) ON DELETE SET NULL
);

-- 3. NHÀ CUNG CẤP
CREATE TABLE Supplier (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    contact_person VARCHAR(100),
    phone VARCHAR(20),
    email VARCHAR(100),
    address TEXT,
    is_active BOOLEAN DEFAULT TRUE
);

-- 4. CHI NHÁNH
CREATE TABLE Branch (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    address TEXT NOT NULL,
    phone VARCHAR(20),
    manager_id INT,
    is_active BOOLEAN DEFAULT TRUE,
    FOREIGN KEY (manager_id) REFERENCES User(id) ON DELETE SET NULL
);

-- 5. SẢN PHẨM
CREATE TABLE Product (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    description TEXT,
    price DECIMAL(12,2) NOT NULL,
    discount_price DECIMAL(12,2),
    category_id INT,
    supplier_id INT,
    image VARCHAR(255),
    is_active BOOLEAN DEFAULT TRUE,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    SKU VARCHAR(50) UNIQUE,
    FOREIGN KEY (category_id) REFERENCES Category(id) ON DELETE SET NULL,
    FOREIGN KEY (supplier_id) REFERENCES Supplier(id) ON DELETE SET NULL
);

-- 6. KHO HÀNG
CREATE TABLE Stock (
    id INT AUTO_INCREMENT PRIMARY KEY,
    product_id INT NOT NULL,
    quantity INT NOT NULL DEFAULT 0,
    branch_id INT NOT NULL,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (product_id) REFERENCES Product(id) ON DELETE CASCADE,
    FOREIGN KEY (branch_id) REFERENCES Branch(id) ON DELETE CASCADE,
    UNIQUE (product_id, branch_id)
);

-- 7. PHIẾU CHUYỂN KHO
CREATE TABLE StockMovement (
    id INT AUTO_INCREMENT PRIMARY KEY,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    type ENUM('IN', 'OUT', 'TRANSFER') NOT NULL,
    from_branch_id INT,
    to_branch_id INT,
    staff_id INT NOT NULL,
    note TEXT,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    reference_id INT,
    FOREIGN KEY (product_id) REFERENCES Product(id) ON DELETE CASCADE,
    FOREIGN KEY (from_branch_id) REFERENCES Branch(id) ON DELETE SET NULL,
    FOREIGN KEY (to_branch_id) REFERENCES Branch(id) ON DELETE SET NULL,
    FOREIGN KEY (staff_id) REFERENCES User(id) ON DELETE CASCADE
);

-- 8. GIỎ HÀNG
CREATE TABLE Cart (
    id INT AUTO_INCREMENT PRIMARY KEY,
    customer_id INT NOT NULL,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (customer_id) REFERENCES User(id) ON DELETE CASCADE
);

-- 9. CHI TIẾT GIỎ HÀNG
CREATE TABLE CartItem (
    id INT AUTO_INCREMENT PRIMARY KEY,
    cart_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL DEFAULT 1,
    FOREIGN KEY (cart_id) REFERENCES Cart(id) ON DELETE CASCADE,
    FOREIGN KEY (product_id) REFERENCES Product(id) ON DELETE CASCADE
);

-- 10. ĐƠN HÀNG
CREATE TABLE `Order` (
    id INT AUTO_INCREMENT PRIMARY KEY,
    customer_id INT NOT NULL,
    status ENUM('PENDING', 'CONFIRMED', 'SHIPPED', 'DELIVERED', 'CANCELLED') NOT NULL DEFAULT 'PENDING',
    total_amount DECIMAL(12,2) NOT NULL,
    shipping_address TEXT NOT NULL,
    payment_method VARCHAR(50) NOT NULL,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    note TEXT,
    sales_staff_id INT,
    branch_id INT NOT NULL,
    coupon_id INT,
    FOREIGN KEY (customer_id) REFERENCES User(id) ON DELETE CASCADE,
    FOREIGN KEY (sales_staff_id) REFERENCES User(id) ON DELETE SET NULL,
    FOREIGN KEY (branch_id) REFERENCES Branch(id) ON DELETE CASCADE
);

-- 11. CHI TIẾT ĐƠN HÀNG
CREATE TABLE OrderItem (
    id INT AUTO_INCREMENT PRIMARY KEY,
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    price DECIMAL(12,2) NOT NULL,
    subtotal DECIMAL(12,2) NOT NULL,
    FOREIGN KEY (order_id) REFERENCES `Order`(id) ON DELETE CASCADE,
    FOREIGN KEY (product_id) REFERENCES Product(id) ON DELETE CASCADE
);

-- 12. ĐƠN ĐẶT HÀNG TỪ NHÀ CUNG CẤP
CREATE TABLE PurchaseOrder (
    id INT AUTO_INCREMENT PRIMARY KEY,
    supplier_id INT NOT NULL,
    staff_id INT NOT NULL,
    status ENUM('PENDING', 'CONFIRMED', 'RECEIVED', 'CANCELLED') NOT NULL DEFAULT 'PENDING',
    total_amount DECIMAL(12,2) NOT NULL,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    received_at DATETIME,
    note TEXT,
    FOREIGN KEY (supplier_id) REFERENCES Supplier(id) ON DELETE CASCADE,
    FOREIGN KEY (staff_id) REFERENCES User(id) ON DELETE CASCADE
);

-- 13. CHI TIẾT ĐƠN ĐẶT HÀNG
CREATE TABLE PurchaseOrderItem (
    id INT AUTO_INCREMENT PRIMARY KEY,
    purchase_order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    price DECIMAL(12,2) NOT NULL,
    subtotal DECIMAL(12,2) NOT NULL,
    FOREIGN KEY (purchase_order_id) REFERENCES PurchaseOrder(id) ON DELETE CASCADE,
    FOREIGN KEY (product_id) REFERENCES Product(id) ON DELETE CASCADE
);

-- 14. CẤU HÌNH WEBSITE
CREATE TABLE WebsiteConfig (
    id INT AUTO_INCREMENT PRIMARY KEY,
    banner_image VARCHAR(255),
    contact_email VARCHAR(100),
    contact_phone VARCHAR(20),
    address TEXT,
    about_us TEXT,
    facebook_link VARCHAR(255),
    instagram_link VARCHAR(255)
);

-- ========== NÂNG CẤP QUẢN LÝ SẢN PHẨM ==========

-- 15. HÌNH ẢNH SẢN PHẨM (nhiều hình cho 1 sản phẩm)
CREATE TABLE ProductImage (
    id INT AUTO_INCREMENT PRIMARY KEY,
    product_id INT NOT NULL,
    image_url VARCHAR(255) NOT NULL,
    is_primary BOOLEAN DEFAULT FALSE,
    display_order INT DEFAULT 0,
    FOREIGN KEY (product_id) REFERENCES Product(id) ON DELETE CASCADE
);

-- 16. THUỘC TÍNH SẢN PHẨM (chất liệu, xuất xứ...)
CREATE TABLE ProductAttribute (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    display_name VARCHAR(100) NOT NULL
);

-- 17. GIÁ TRỊ THUỘC TÍNH SẢN PHẨM
CREATE TABLE ProductAttributeValue (
    id INT AUTO_INCREMENT PRIMARY KEY,
    product_id INT NOT NULL,
    attribute_id INT NOT NULL,
    value VARCHAR(255) NOT NULL,
    FOREIGN KEY (product_id) REFERENCES Product(id) ON DELETE CASCADE,
    FOREIGN KEY (attribute_id) REFERENCES ProductAttribute(id) ON DELETE CASCADE
);

-- 18. BIẾN THỂ SẢN PHẨM (màu sắc, kích thước...)
CREATE TABLE ProductVariant (
    id INT AUTO_INCREMENT PRIMARY KEY,
    product_id INT NOT NULL,
    SKU VARCHAR(50) UNIQUE,
    price DECIMAL(12,2),
    discount_price DECIMAL(12,2),
    quantity INT DEFAULT 0,
    is_active BOOLEAN DEFAULT TRUE,
    FOREIGN KEY (product_id) REFERENCES Product(id) ON DELETE CASCADE
);

-- 19. THUỘC TÍNH BIẾN THỂ (ví dụ: color = blue, size = XL)
CREATE TABLE VariantAttribute (
    id INT AUTO_INCREMENT PRIMARY KEY,
    variant_id INT NOT NULL,
    attribute_id INT NOT NULL,
    value VARCHAR(255) NOT NULL,
    FOREIGN KEY (variant_id) REFERENCES ProductVariant(id) ON DELETE CASCADE,
    FOREIGN KEY (attribute_id) REFERENCES ProductAttribute(id) ON DELETE CASCADE
);

-- 20. ĐÁNH GIÁ SẢN PHẨM
CREATE TABLE ProductReview (
    id INT AUTO_INCREMENT PRIMARY KEY,
    product_id INT NOT NULL,
    customer_id INT NOT NULL,
    rating TINYINT NOT NULL CHECK (rating BETWEEN 1 AND 5),
    comment TEXT,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    is_approved BOOLEAN DEFAULT FALSE,
    FOREIGN KEY (product_id) REFERENCES Product(id) ON DELETE CASCADE,
    FOREIGN KEY (customer_id) REFERENCES User(id) ON DELETE CASCADE
);

-- ========== NÂNG CẤP TRẢI NGHIỆM KHÁCH HÀNG ==========

-- 21. ĐỊA CHỈ GIAO HÀNG (nhiều địa chỉ cho 1 người dùng)
CREATE TABLE UserShippingAddress (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT NOT NULL,
    recipient_name VARCHAR(100) NOT NULL,
    phone VARCHAR(20) NOT NULL,
    address TEXT NOT NULL,
    city VARCHAR(100) NOT NULL,
    postal_code VARCHAR(20),
    is_default BOOLEAN DEFAULT FALSE,
    FOREIGN KEY (user_id) REFERENCES User(id) ON DELETE CASCADE
);

-- 22. DANH SÁCH YÊU THÍCH
CREATE TABLE Wishlist (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT NOT NULL,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES User(id) ON DELETE CASCADE
);

-- 23. CHI TIẾT DANH SÁCH YÊU THÍCH
CREATE TABLE WishlistItem (
    id INT AUTO_INCREMENT PRIMARY KEY,
    wishlist_id INT NOT NULL,
    product_id INT NOT NULL,
    added_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (wishlist_id) REFERENCES Wishlist(id) ON DELETE CASCADE,
    FOREIGN KEY (product_id) REFERENCES Product(id) ON DELETE CASCADE,
    UNIQUE (wishlist_id, product_id)
);

-- 24. SẢN PHẨM ĐÃ XEM GẦN ĐÂY
CREATE TABLE RecentlyViewed (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT NOT NULL,
    product_id INT NOT NULL,
    viewed_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES User(id) ON DELETE CASCADE,
    FOREIGN KEY (product_id) REFERENCES Product(id) ON DELETE CASCADE,
    UNIQUE (user_id, product_id)
);

-- 25. THÔNG BÁO
CREATE TABLE Notification (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT NOT NULL,
    title VARCHAR(255) NOT NULL,
    message TEXT NOT NULL,
    is_read BOOLEAN DEFAULT FALSE,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    type ENUM('ORDER', 'SYSTEM', 'PROMOTION') NOT NULL,
    reference_id INT,
    FOREIGN KEY (user_id) REFERENCES User(id) ON DELETE CASCADE
);

-- ========== NÂNG CẤP THANH TOÁN VÀ KHUYẾN MÃI ==========

-- 26. GIAO DỊCH THANH TOÁN
CREATE TABLE PaymentTransaction (
    id INT AUTO_INCREMENT PRIMARY KEY,
    order_id INT NOT NULL,
    amount DECIMAL(12,2) NOT NULL,
    payment_method VARCHAR(50) NOT NULL,
    transaction_id VARCHAR(255),
    status ENUM('PENDING', 'COMPLETED', 'FAILED', 'REFUNDED') NOT NULL,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (order_id) REFERENCES `Order`(id) ON DELETE CASCADE
);

-- 27. MÃ GIẢM GIÁ
CREATE TABLE Coupon (
    id INT AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) UNIQUE NOT NULL,
    description TEXT,
    discount_type ENUM('PERCENTAGE', 'FIXED_AMOUNT') NOT NULL,
    discount_value DECIMAL(12,2) NOT NULL,
    min_purchase DECIMAL(12,2) DEFAULT 0,
    start_date DATE NOT NULL,
    end_date DATE NOT NULL,
    usage_limit INT,
    times_used INT DEFAULT 0,
    is_active BOOLEAN DEFAULT TRUE,
    applies_to ENUM('ALL', 'CATEGORY', 'PRODUCT') DEFAULT 'ALL',
    category_id INT,
    product_id INT,
    FOREIGN KEY (category_id) REFERENCES Category(id) ON DELETE SET NULL,
    FOREIGN KEY (product_id) REFERENCES Product(id) ON DELETE SET NULL
);

-- 28. LỊCH SỬ TRẠNG THÁI ĐƠN HÀNG
CREATE TABLE OrderStatusHistory (
    id INT AUTO_INCREMENT PRIMARY KEY,
    order_id INT NOT NULL,
    status ENUM('PENDING', 'CONFIRMED', 'SHIPPED', 'DELIVERED', 'CANCELLED') NOT NULL,
    note TEXT,
    created_by INT NOT NULL,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (order_id) REFERENCES `Order`(id) ON DELETE CASCADE,
    FOREIGN KEY (created_by) REFERENCES User(id) ON DELETE CASCADE
);

-- 29. CHƯƠNG TRÌNH KHUYẾN MÃI
CREATE TABLE Promotion (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    description TEXT,
    discount_type ENUM('PERCENTAGE', 'FIXED_AMOUNT', 'BUY_X_GET_Y') NOT NULL,
    discount_value DECIMAL(12,2) NOT NULL,
    start_date DATE NOT NULL,
    end_date DATE NOT NULL,
    is_active BOOLEAN DEFAULT TRUE,
    applies_to ENUM('ALL', 'CATEGORY', 'PRODUCT') DEFAULT 'ALL',
    category_id INT,
    product_id INT,
    min_quantity INT DEFAULT 1,
    FOREIGN KEY (category_id) REFERENCES Category(id) ON DELETE SET NULL,
    FOREIGN KEY (product_id) REFERENCES Product(id) ON DELETE SET NULL
);

-- ========== NÂNG CẤP NỘI DUNG VÀ SEO ==========

-- 30. CÂU HỎI THƯỜNG GẶP
CREATE TABLE FAQ (
    id INT AUTO_INCREMENT PRIMARY KEY,
    question TEXT NOT NULL,
    answer TEXT NOT NULL,
    category VARCHAR(100),
    display_order INT DEFAULT 0,
    is_active BOOLEAN DEFAULT TRUE
);

-- 31. TRANG TĨNH (Về chúng tôi, Chính sách...)
CREATE TABLE StaticPage (
    id INT AUTO_INCREMENT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    slug VARCHAR(255) UNIQUE NOT NULL,
    content TEXT NOT NULL,
    meta_title VARCHAR(255),
    meta_description TEXT,
    is_active BOOLEAN DEFAULT TRUE,
    last_updated DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

-- 32. DANH MỤC BÀI VIẾT BLOG
CREATE TABLE BlogCategory (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    slug VARCHAR(100) UNIQUE NOT NULL,
    description TEXT,
    is_active BOOLEAN DEFAULT TRUE
);

-- 33. BÀI VIẾT BLOG
CREATE TABLE BlogPost (
    id INT AUTO_INCREMENT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    slug VARCHAR(255) UNIQUE NOT NULL,
    content TEXT NOT NULL,
    excerpt TEXT,
    featured_image VARCHAR(255),
    author_id INT NOT NULL,
    category_id INT,
    published_at DATETIME,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    is_published BOOLEAN DEFAULT FALSE,
    view_count INT DEFAULT 0,
    FOREIGN KEY (author_id) REFERENCES User(id) ON DELETE CASCADE,
    FOREIGN KEY (category_id) REFERENCES BlogCategory(id) ON DELETE SET NULL
);

-- 34. TAGS CHO BÀI VIẾT
CREATE TABLE BlogTag (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    slug VARCHAR(50) UNIQUE NOT NULL
);

-- 35. LIÊN KẾT GIỮA BÀI VIẾT VÀ TAG
CREATE TABLE BlogPostTag (
    blog_post_id INT NOT NULL,
    blog_tag_id INT NOT NULL,
    PRIMARY KEY (blog_post_id, blog_tag_id),
    FOREIGN KEY (blog_post_id) REFERENCES BlogPost(id) ON DELETE CASCADE,
    FOREIGN KEY (blog_tag_id) REFERENCES BlogTag(id) ON DELETE CASCADE
);

-- ========== NÂNG CẤP PHÂN TÍCH DỮ LIỆU ==========

-- 36. HOẠT ĐỘNG NGƯỜI DÙNG
CREATE TABLE UserActivity (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT,
    activity_type ENUM('VIEW_PRODUCT', 'ADD_TO_CART', 'PURCHASE', 'SEARCH', 'LOGIN', 'REGISTER', 'WISHLIST') NOT NULL,
    activity_data JSON,
    ip_address VARCHAR(45),
    user_agent TEXT,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES User(id) ON DELETE SET NULL
);

-- 37. DỮ LIỆU THỐNG KÊ
CREATE TABLE Analytics (
    id INT AUTO_INCREMENT PRIMARY KEY,
    date DATE NOT NULL,
    visits INT DEFAULT 0,
    unique_visitors INT DEFAULT 0,
    page_views INT DEFAULT 0,
    bounce_rate DECIMAL(5,2),
    avg_session_duration INT,
    sales_count INT DEFAULT 0,
    sales_amount DECIMAL(12,2) DEFAULT 0,
    conversion_rate DECIMAL(5,2),
    data_json JSON,
    UNIQUE (date)
);

-- ========== INDEXES CHO HIỆU SUẤT ==========

-- Indexes cho các bảng cơ bản
CREATE INDEX idx_user_role ON User(role);
CREATE INDEX idx_product_category ON Product(category_id);
CREATE INDEX idx_product_supplier ON Product(supplier_id);
CREATE INDEX idx_product_active_price ON Product(is_active, price);
CREATE INDEX idx_stock_product_branch ON Stock(product_id, branch_id);
CREATE INDEX idx_order_customer ON `Order`(customer_id);
CREATE INDEX idx_order_status ON `Order`(status);
CREATE INDEX idx_order_created_at ON `Order`(created_at);
CREATE INDEX idx_order_branch ON `Order`(branch_id);

-- Indexes cho các bảng nâng cấp
CREATE INDEX idx_product_review_product ON ProductReview(product_id);
CREATE INDEX idx_product_review_rating ON ProductReview(product_id, rating);
CREATE INDEX idx_notification_user ON Notification(user_id, is_read);
CREATE INDEX idx_coupon_code ON Coupon(code);
CREATE INDEX idx_coupon_active_dates ON Coupon(is_active, start_date, end_date);
CREATE INDEX idx_blog_post_slug ON BlogPost(slug);
CREATE INDEX idx_blog_post_published ON BlogPost(is_published, published_at);
CREATE INDEX idx_user_activity_user ON UserActivity(user_id);
CREATE INDEX idx_user_activity_type_time ON UserActivity(activity_type, created_at); 